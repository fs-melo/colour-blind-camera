
<CameraDisplayWidget>:
    canvas:
        Color:
            rgba: 1, 1, 1, 1
        Rectangle:
            pos: self._rect_pos
            size: self._rect_size
            texture: self.texture
            tex_coords: root.tex_coords


<RootLayout>:
    orientation: "vertical"
    ColourShaderWidget:
        id: shader_widget
        CameraDisplayWidget:
            id: cdw
            texture: app.texture
            resolution: app.camera_resolution
    BoxLayout:
        id: buttons_dropdown
        pos_hint: {}
        size_hint: 1, None
        height: dp(40)
        pos: root.x, root.top - self.height + (1. - root._buttons_visible_fraction) * self.height
        orientation: "horizontal"
        canvas:
            Color:
                rgba: 0.4, 0.4, 0.4, 0.4
            Rectangle:
                pos: self.pos
                size: self.size
        Widget:
        Button:
            text: "next camera"
            on_release: app.rotate_cameras()
            size_hint_x: None
            width: self.texture_size[0] + dp(20)

        ToggleButton:
            text: 'trichromacy'
            id: normal_button
            on_press: shader_widget.transformation = 'none'
            group: 'transformations'
            state: 'down'
            size_hint_x: None
            width: self.texture_size[0] + dp(20)
        ToggleButton:
            text: 'protanopia'
            on_press: shader_widget.transformation = ('protanopia' if self.state == 'down' else 'none')
            group: 'transformations'
            size_hint_x: None
            width: self.texture_size[0] + dp(20)
        ToggleButton:
            text: 'deuteranopia'
            on_press: shader_widget.transformation = ('deuteranopia' if self.state == 'down' else 'none')
            group: 'transformations'
            size_hint_x: None
            width: self.texture_size[0] + dp(20)
        ToggleButton:
            text: 'tritanopia'
            on_press: shader_widget.transformation = ('tritanopia' if self.state == 'down' else 'none')
            group: 'transformations'
            size_hint_x: None
            width: self.texture_size[0] + dp(20)
        ToggleButton:
            text: 'chromaticity'
            on_press: shader_widget.transformation = ('chromaticity' if self.state == 'down' else 'none')
            group: 'transformations'
            size_hint_x: None
            width: self.texture_size[0] + dp(20)
        Widget:
